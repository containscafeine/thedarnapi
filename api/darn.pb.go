// Code generated by protoc-gen-go. DO NOT EDIT.
// source: darn.proto

/*
Package darn is a generated protocol buffer package.

It is generated from these files:
	darn.proto

It has these top-level messages:
	Data
	Success
*/
package darn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	Plugin   string `protobuf:"bytes,1,opt,name=plugin" json:"plugin,omitempty"`
	Error    string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Platform string `protobuf:"bytes,3,opt,name=platform" json:"platform,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Data) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *Data) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Data) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type Success struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *Success) Reset()                    { *m = Success{} }
func (m *Success) String() string            { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()               {}
func (*Success) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Success) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Data)(nil), "darn.Data")
	proto.RegisterType((*Success)(nil), "darn.Success")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ErrorIn service

type ErrorInClient interface {
	Submit(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Success, error)
}

type errorInClient struct {
	cc *grpc.ClientConn
}

func NewErrorInClient(cc *grpc.ClientConn) ErrorInClient {
	return &errorInClient{cc}
}

func (c *errorInClient) Submit(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := grpc.Invoke(ctx, "/darn.ErrorIn/Submit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ErrorIn service

type ErrorInServer interface {
	Submit(context.Context, *Data) (*Success, error)
}

func RegisterErrorInServer(s *grpc.Server, srv ErrorInServer) {
	s.RegisterService(&_ErrorIn_serviceDesc, srv)
}

func _ErrorIn_Submit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ErrorInServer).Submit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/darn.ErrorIn/Submit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ErrorInServer).Submit(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

var _ErrorIn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "darn.ErrorIn",
	HandlerType: (*ErrorInServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Submit",
			Handler:    _ErrorIn_Submit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "darn.proto",
}

func init() { proto.RegisterFile("darn.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x2c, 0xca,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x02, 0xb8, 0x58, 0x5c, 0x12,
	0x4b, 0x12, 0x85, 0xc4, 0xb8, 0xd8, 0x0a, 0x72, 0x4a, 0xd3, 0x33, 0xf3, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0xa0, 0x3c, 0x21, 0x11, 0x2e, 0xd6, 0xd4, 0xa2, 0xa2, 0xfc, 0x22, 0x09, 0x26,
	0xb0, 0x30, 0x84, 0x23, 0x24, 0xc5, 0xc5, 0x51, 0x90, 0x93, 0x58, 0x92, 0x96, 0x5f, 0x94, 0x2b,
	0xc1, 0x0c, 0x96, 0x80, 0xf3, 0x95, 0x94, 0xb9, 0xd8, 0x83, 0x4b, 0x93, 0x93, 0x53, 0x8b, 0x8b,
	0x85, 0x24, 0xb8, 0xd8, 0x8b, 0x21, 0x4c, 0xb0, 0xa9, 0x1c, 0x41, 0x30, 0xae, 0x91, 0x01, 0x17,
	0xbb, 0x2b, 0xc8, 0x24, 0xcf, 0x3c, 0x21, 0x55, 0x2e, 0xb6, 0xe0, 0xd2, 0xa4, 0xdc, 0xcc, 0x12,
	0x21, 0x2e, 0x3d, 0xb0, 0xf3, 0x40, 0xee, 0x91, 0xe2, 0x85, 0xb0, 0xa1, 0x26, 0x29, 0x31, 0x24,
	0xb1, 0x81, 0x5d, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xed, 0x14, 0xf3, 0x85, 0xc3, 0x00,
	0x00, 0x00,
}
